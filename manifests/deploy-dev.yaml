# 创建命名空间 flow
apiVersion: v1
kind: Namespace
metadata:
  name: flow
---
# 创建镜像拉取密钥
kind: Secret
apiVersion: v1
metadata:
  name: aliyun-docker-secret
  namespace: flow
data:
  .dockerconfigjson: >-
    eyJhdXRocyI6eyJyZWdpc3RyeS5jbi1oYW5nemhvdS5hbGl5dW5jcy5jb20iOnsidXNlcm5hbWUiOiJoYW5zaW5AMTcwOTc4NDEzMDAwOTU4MCIsInBhc3N3b3JkIjoibGI4NDU2MTI1MDAiLCJhdXRoIjoiYUdGdWMybHVRREUzTURrM09EUXhNekF3TURrMU9EQTZiR0k0TkRVMk1USTFNREE9In19fQ==
type: kubernetes.io/dockerconfigjson
---
# 创建 flow-service 配置文件
apiVersion: v1
kind: ConfigMap
metadata:
  name: flow-service-config
  namespace: flow
data:
  application.yaml: |-
    # OAuth 配置
    plus:
      oauth2:
        client:
          client-id: 877ce1dd5030000
          client-secret: 1283d148237af330152929cfe05ec045b0a4e92d
          api-endpoint: http://auth-service.auth
          token-uri: http://auth-service.auth/v1/oauth/token
        resource-server:
          jwk-set-uri: http://auth-service.auth/v1/jwk
          client-secret: none
          client-id: none
          uri: http://auth-service.auth/v1/token/validity
          token-type: jwt
      datacenter:
        amqp:
          exchange: datacenter-test
          sync:
            enabled: true
            queue: flow-test
            dead-letter-queue: flow-dead-test
      flow:
        authorization-endpoint: "http://accounts.wgv.ink/authorize"
        zeebe:
          address: zeebe-zeebe-gateway.zeebe:26500
          plaintext: true
          system-prefix:
            - "csystem-"
      messenger:
        client:
          client-id: 8906c510dc30000
          client-secret: dc09dbd5abeba019afbd678325961b05b1bfdbf0
    # SpringDoc 配置
    springdoc:
      api-docs:
        enabled: on
        path: /doc
      swagger-ui:
        path: /doc.html
        oauth:
          client-id: 86c3e34e2030000
          additional-query-string-params:
            jwt: true
    spring:
      rabbitmq:
        addresses: rabbit-mq.default
        port: 5672
        username: flow-test
        password: flow-test
      data:
        elasticsearch:
          client:
            reactive:
              endpoints:
                - elasticsearch-master.zeebe
    logging:
      level:
        plus.flow.*: debug
---
# 创建 Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flow-service
  namespace: flow
  labels:
    app: flow-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flow-service
  template:
    metadata:
      labels:
        app: flow-service
    spec:
      serviceAccountName: flow
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: aliyun-docker-secret
      containers:
        - name: flow-service
          image: ${SERVICE_IMAGE}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health/liveness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /actuator/health/readiness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: config
              mountPath: /application.yaml
              subPath: application.yaml
      initContainers:
        - name: init-zeebe-gateway
          image: busybox
          imagePullPolicy: IfNotPresent
          command: [ 'sh', '-c', "until nc -z zeebe-zeebe-gateway.zeebe 26500; do echo waiting for zeebe-gateway; sleep 2; done" ]
        - name: init-mq
          image: busybox
          imagePullPolicy: IfNotPresent
          command: [ 'sh', '-c', "until nc -z rabbit-mq.default 5672; do echo waiting for rabbitmq; sleep 2; done" ]
        - name: init-elasticsearch
          image: busybox
          imagePullPolicy: IfNotPresent
          command: [ 'sh', '-c', "until nc -z elasticsearch-master.zeebe 9200; do echo waiting for elasticsearch; sleep 2; done" ]
      volumes:
        - name: config
          configMap:
            name: flow-service-config
            items:
              - key: application.yaml
                path: application.yaml
---
# 创建服务
apiVersion: v1
kind: Service
metadata:
  name: flow-service
  namespace: flow
  labels:
    app: flow-service
spec:
  ports:
    - port: 80
      targetPort: 8080
      name: http
  selector:
    app: flow-service
  type: ClusterIP
---
# 创建 Ingress
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: flow-service
  namespace: flow
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /
            backend:
              serviceName: flow-service
              servicePort: 80
      host: api.flow.wgv.ink